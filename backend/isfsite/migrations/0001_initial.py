# Generated by Django 5.1 on 2024-08-30 18:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CDPIndustry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('conversion_rate', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('last_update', models.DateTimeField(blank=True, default=None, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('url', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CDPSector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='isfsite.cdpindustry')),
            ],
        ),
        migrations.CreateModel(
            name='CDPActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='isfsite.cdpsector')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('code', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('loctype', models.CharField(blank=True, choices=[('COUNTRY', 'country'), ('REGION', 'region'), ('MULTI', 'multi'), ('OTHER', 'other'), ('EXCEPT', 'except')], default='COUNTRY', max_length=20)),
                ('components', models.ManyToManyField(blank=True, default=None, to='isfsite.location')),
                ('currency', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.currency')),
                ('parent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='isfsite.location')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Firm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('account_number', models.IntegerField(blank=True, default=None, null=True)),
                ('hasScope1', models.BooleanField(default=False)),
                ('hasScope2', models.BooleanField(default=False)),
                ('hasScope3', models.BooleanField(default=False)),
                ('hasTargets', models.BooleanField(default=False)),
                ('site', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('cdp_activity', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='firms', to='isfsite.cdpactivity')),
                ('cdp_industry', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='firms', to='isfsite.cdpindustry')),
                ('cdp_sector', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='firms', to='isfsite.cdpsector')),
                ('currency', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.currency')),
                ('industry', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.industry')),
                ('hq_location', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='firm_loc', to='isfsite.location')),
                ('sector', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.sector')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Qual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('timescale', models.CharField(blank=True, choices=[('annual', 'annual'), ('quarterly', 'quarterly'), ('monthly', 'monthly'), ('weekly', 'weekly'), ('daily', 'daily'), ('irregular', 'irregular')], default='annual', max_length=20)),
                ('forecast', models.BooleanField(default=False)),
                ('publication_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('value', models.CharField(max_length=2500, null=True)),
                ('firm', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='data1', to='isfsite.firm')),
                ('location', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='data1', to='isfsite.location')),
                ('metric', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='isfsite.metric')),
                ('source', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.source')),
            ],
            options={
                'ordering': ('location', 'metric', 'date'),
            },
        ),
        migrations.CreateModel(
            name='Intensity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numerator', models.CharField(choices=[('hq1', 'scope 1 hq based'), ('hq2', 'scope 2 hq based'), ('hq3', 'scope 3 hq based'), ('hq12', 'scope 1 and scope 2 hq based'), ('hq13', 'scope 1 and scope 3 hq based'), ('hq23', 'scope 2 and scope 3 hq based'), ('hq123', 'all scopes hq based'), ('loc1', 'scope 1 location based'), ('loc2', 'scope 2 location based'), ('loc3', 'scope 3 location based'), ('loc12', 'scope 1 and scope 2 location based'), ('loc13', 'scope 1 and scope 3 location based'), ('loc23', 'scope 2 and scope 3 location based'), ('loc123', 'all scopes location based')], max_length=100)),
                ('last_available', models.BooleanField(blank=True, default=False)),
                ('denominator', models.CharField(choices=[('currentrevenue', 'current revenue'), ('historicalrevenue', 'historical revenue'), ('historicalemployees', 'historical number of employees'), ('currentemployees', 'current number of employees')], max_length=100)),
                ('date', models.DateTimeField()),
                ('location_based', models.BooleanField(default='False')),
                ('timescale', models.CharField(blank=True, choices=[('annual', 'annual'), ('quarterly', 'quarterly'), ('monthly', 'monthly'), ('weekly', 'weekly'), ('daily', 'daily'), ('irregular', 'irregular')], default='annual', max_length=20)),
                ('forecast', models.BooleanField(default=False)),
                ('publication_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('value', models.DecimalField(decimal_places=2, max_digits=50, null=True)),
                ('firm', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='data3', to='isfsite.firm')),
                ('location', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='data3', to='isfsite.location')),
                ('source', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.source')),
            ],
            options={
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='SubIndustry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='isfsite.industry')),
            ],
        ),
        migrations.AddField(
            model_name='firm',
            name='subindustry',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.subindustry'),
        ),
        migrations.CreateModel(
            name='SubSector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='isfsite.sector')),
            ],
        ),
        migrations.AddField(
            model_name='industry',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='isfsite.subsector'),
        ),
        migrations.AddField(
            model_name='firm',
            name='subsector',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.subsector'),
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_number', models.IntegerField(default='1')),
                ('date_set', models.DateTimeField()),
                ('status', models.CharField(blank=True, choices=[('Achieved', 'achieved'), ('Expired', 'expired'), ('New', 'new'), ('Replaced', 'replaced'), ('Retired', 'retired'), ('Revised', 'revised'), ('Underway', 'underway'), ('NONE', 'NONE')], default='NONE', max_length=10)),
                ('scope', models.CharField(choices=[('1', 'scope 1'), ('2', 'scope 2'), ('3', 'scope 3'), ('1+2', 'scope 1 and scope 2'), ('1+3', 'scope 1 and scope 3'), ('2+3', 'scope 2 and scope 3'), ('1+2+3', 'all scopes'), ('NONE', 'NONE')], default='NONE', max_length=10)),
                ('scope2_scheme', models.CharField(blank=True, choices=[('LOC', 'loc'), ('MKT', 'mkt'), ('LOC+MKT', 'loc + mkt'), ('NONE', 'none')], default='NONE', max_length=10)),
                ('scope3_source', models.CharField(blank=True, default='NONE', max_length=100)),
                ('firm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='isfsite.firm')),
            ],
            options={
                'ordering': ('date_set',),
            },
        ),
        migrations.CreateModel(
            name='TargetData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publication_date', models.DateTimeField()),
                ('base_year', models.IntegerField()),
                ('target_year', models.IntegerField()),
                ('covered_base', models.DecimalField(decimal_places=2, max_digits=50)),
                ('targeted_reduction', models.DecimalField(decimal_places=2, max_digits=10)),
                ('covered_target', models.DecimalField(decimal_places=2, max_digits=50)),
                ('covered_pubyear', models.DecimalField(decimal_places=2, max_digits=50)),
                ('percent_of_total', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('description', models.TextField(blank=True, default='')),
                ('status', models.CharField(blank=True, choices=[('Achieved', 'achieved'), ('Expired', 'expired'), ('New', 'new'), ('Replaced', 'replaced'), ('Retired', 'retired'), ('Revised', 'revised'), ('Underway', 'underway'), ('NONE', 'NONE')], default='NONE', max_length=10)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='isfsite.target')),
            ],
            options={
                'ordering': ('-publication_date',),
            },
        ),
        migrations.CreateModel(
            name='Ticker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('firm', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickers', to='isfsite.firm')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('coeff', models.DecimalField(blank=True, decimal_places=6, default=1, max_digits=10, null=True)),
                ('const', models.DecimalField(blank=True, decimal_places=6, default=0, max_digits=10, null=True)),
                ('default_unit', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.unit')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Scope3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('location_based', models.BooleanField(default='False')),
                ('interpolation', models.BooleanField(blank=True, default=False)),
                ('amendment', models.BooleanField(blank=True, default=False)),
                ('timescale', models.CharField(blank=True, choices=[('annual', 'annual'), ('quarterly', 'quarterly'), ('monthly', 'monthly'), ('weekly', 'weekly'), ('daily', 'daily'), ('irregular', 'irregular')], default='annual', max_length=20)),
                ('forecast', models.BooleanField(default=False)),
                ('most_recent', models.BooleanField(blank=True, default=False)),
                ('publication_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('last_available', models.BooleanField(blank=True, default=False)),
                ('scope_source', models.CharField(blank=True, max_length=100, null=True)),
                ('calculation_method', models.CharField(blank=True, max_length=300, null=True)),
                ('most_common_scope_source', models.BooleanField(blank=True, default=False)),
                ('scope_source_cleaned', models.CharField(blank=True, max_length=100, null=True)),
                ('scp3_pcnt_from_other_sources', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('scp3_most_common_source', models.BooleanField(blank=True, default=False)),
                ('value', models.DecimalField(decimal_places=2, max_digits=50, null=True)),
                ('datatype', models.CharField(choices=[('PERCENT', '%'), ('RATIO', ':'), ('TOTAL', 'total'), ('BINARY', 'binary')], default='TOTAL', max_length=10)),
                ('firm', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='scope3', to='isfsite.firm')),
                ('location', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scope3', to='isfsite.location')),
                ('metric', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='isfsite.metric')),
                ('source', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.source')),
                ('unit', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.unit')),
            ],
            options={
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='Scope2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('location_based', models.BooleanField(default='False')),
                ('interpolation', models.BooleanField(blank=True, default=False)),
                ('amendment', models.BooleanField(blank=True, default=False)),
                ('timescale', models.CharField(blank=True, choices=[('annual', 'annual'), ('quarterly', 'quarterly'), ('monthly', 'monthly'), ('weekly', 'weekly'), ('daily', 'daily'), ('irregular', 'irregular')], default='annual', max_length=20)),
                ('forecast', models.BooleanField(default=False)),
                ('most_recent', models.BooleanField(blank=True, default=False)),
                ('publication_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('last_available', models.BooleanField(blank=True, default=False)),
                ('scheme', models.CharField(choices=[('LOC', 'loc'), ('MKT', 'mkt'), ('NONE', 'none')], default='NONE', max_length=10)),
                ('value', models.DecimalField(decimal_places=2, max_digits=50, null=True)),
                ('datatype', models.CharField(choices=[('PERCENT', '%'), ('RATIO', ':'), ('TOTAL', 'total'), ('BINARY', 'binary')], default='TOTAL', max_length=10)),
                ('firm', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='scope2', to='isfsite.firm')),
                ('location', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scope2', to='isfsite.location')),
                ('metric', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='isfsite.metric')),
                ('source', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.source')),
                ('unit', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.unit')),
            ],
            options={
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='Scope1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('location_based', models.BooleanField(default='False')),
                ('interpolation', models.BooleanField(blank=True, default=False)),
                ('amendment', models.BooleanField(blank=True, default=False)),
                ('timescale', models.CharField(blank=True, choices=[('annual', 'annual'), ('quarterly', 'quarterly'), ('monthly', 'monthly'), ('weekly', 'weekly'), ('daily', 'daily'), ('irregular', 'irregular')], default='annual', max_length=20)),
                ('forecast', models.BooleanField(default=False)),
                ('most_recent', models.BooleanField(blank=True, default=False)),
                ('publication_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('last_available', models.BooleanField(blank=True, default=False)),
                ('value', models.DecimalField(decimal_places=2, max_digits=50, null=True)),
                ('datatype', models.CharField(choices=[('PERCENT', '%'), ('RATIO', ':'), ('TOTAL', 'total'), ('BINARY', 'binary')], default='TOTAL', max_length=10)),
                ('firm', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='scope1', to='isfsite.firm')),
                ('location', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scope1', to='isfsite.location')),
                ('metric', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='isfsite.metric')),
                ('source', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.source')),
                ('unit', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.unit')),
            ],
            options={
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='Quant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('location_based', models.BooleanField(blank=True, default='False')),
                ('native_currency', models.BooleanField(blank=True, default=False, null=True)),
                ('last_available', models.BooleanField(blank=True, null=True)),
                ('timescale', models.CharField(blank=True, choices=[('annual', 'annual'), ('quarterly', 'quarterly'), ('monthly', 'monthly'), ('weekly', 'weekly'), ('daily', 'daily'), ('irregular', 'irregular')], default='annual', max_length=20)),
                ('forecast', models.BooleanField(default=False)),
                ('most_recent', models.BooleanField(blank=True, default=False)),
                ('publication_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('value', models.DecimalField(decimal_places=2, max_digits=50, null=True)),
                ('datatype', models.CharField(choices=[('PERCENT', '%'), ('RATIO', ':'), ('TOTAL', 'total'), ('BINARY', 'binary')], default='TOTAL', max_length=10)),
                ('currency', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.currency')),
                ('firm', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='firm_quant', to='isfsite.firm')),
                ('location', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='data2', to='isfsite.location')),
                ('metric', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='isfsite.metric')),
                ('source', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.source')),
                ('unit', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='isfsite.unit')),
            ],
            options={
                'ordering': ('date',),
            },
        ),
        migrations.AddField(
            model_name='metric',
            name='units',
            field=models.ManyToManyField(to='isfsite.unit'),
        ),
        migrations.CreateModel(
            name='ISIN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('last_used', models.DateTimeField()),
                ('firm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='isins', to='isfsite.firm')),
            ],
            options={
                'ordering': ['last_used'],
                'constraints': [models.UniqueConstraint(fields=('name',), name='unique-isin')],
            },
        ),
        migrations.AddConstraint(
            model_name='location',
            constraint=models.UniqueConstraint(fields=('name',), name='unique-location'),
        ),
        migrations.AddIndex(
            model_name='qual',
            index=models.Index(fields=['location'], name='isfsite_qua_locatio_d74288_idx'),
        ),
        migrations.AddIndex(
            model_name='qual',
            index=models.Index(fields=['metric'], name='isfsite_qua_metric__ac0050_idx'),
        ),
        migrations.AddIndex(
            model_name='qual',
            index=models.Index(fields=['date'], name='isfsite_qua_date_cc196c_idx'),
        ),
        migrations.AddConstraint(
            model_name='qual',
            constraint=models.UniqueConstraint(fields=('metric', 'location', 'timescale', 'date', 'source', 'publication_date'), name='unique-data'),
        ),
        migrations.AddConstraint(
            model_name='intensity',
            constraint=models.UniqueConstraint(fields=('date', 'numerator', 'denominator', 'firm'), name='unique-intensity'),
        ),
        migrations.AddConstraint(
            model_name='firm',
            constraint=models.UniqueConstraint(fields=('name',), name='unique-firm'),
        ),
        migrations.AddConstraint(
            model_name='target',
            constraint=models.UniqueConstraint(fields=('reference_number', 'firm'), name='unique-target'),
        ),
        migrations.AddIndex(
            model_name='targetdata',
            index=models.Index(fields=['publication_date'], name='isfsite_tar_publica_771041_idx'),
        ),
        migrations.AddConstraint(
            model_name='ticker',
            constraint=models.UniqueConstraint(fields=('name', 'firm'), name='unique-ticker'),
        ),
        migrations.AddIndex(
            model_name='scope3',
            index=models.Index(fields=['location'], name='isfsite_sco_locatio_0ac2fa_idx'),
        ),
        migrations.AddIndex(
            model_name='scope3',
            index=models.Index(fields=['metric'], name='isfsite_sco_metric__360de1_idx'),
        ),
        migrations.AddIndex(
            model_name='scope3',
            index=models.Index(fields=['date'], name='isfsite_sco_date_7da130_idx'),
        ),
        migrations.AddConstraint(
            model_name='scope3',
            constraint=models.UniqueConstraint(fields=('unit', 'location_based', 'metric', 'location', 'timescale', 'date', 'source', 'publication_date', 'firm'), name='unique-scope3'),
        ),
        migrations.AddIndex(
            model_name='scope2',
            index=models.Index(fields=['location'], name='isfsite_sco_locatio_7e1c19_idx'),
        ),
        migrations.AddIndex(
            model_name='scope2',
            index=models.Index(fields=['metric'], name='isfsite_sco_metric__8ff06c_idx'),
        ),
        migrations.AddIndex(
            model_name='scope2',
            index=models.Index(fields=['date'], name='isfsite_sco_date_2673e8_idx'),
        ),
        migrations.AddConstraint(
            model_name='scope2',
            constraint=models.UniqueConstraint(fields=('unit', 'location_based', 'metric', 'location', 'timescale', 'date', 'source', 'publication_date', 'firm', 'scheme'), name='unique-scope2'),
        ),
        migrations.AddIndex(
            model_name='scope1',
            index=models.Index(fields=['location'], name='isfsite_sco_locatio_9c8e21_idx'),
        ),
        migrations.AddIndex(
            model_name='scope1',
            index=models.Index(fields=['metric'], name='isfsite_sco_metric__322e84_idx'),
        ),
        migrations.AddIndex(
            model_name='scope1',
            index=models.Index(fields=['date'], name='isfsite_sco_date_cead8b_idx'),
        ),
        migrations.AddConstraint(
            model_name='scope1',
            constraint=models.UniqueConstraint(fields=('unit', 'location_based', 'metric', 'location', 'timescale', 'date', 'source', 'publication_date', 'firm'), name='unique-scope1'),
        ),
        migrations.AddIndex(
            model_name='quant',
            index=models.Index(fields=['location'], name='isfsite_qua_locatio_bf8adb_idx'),
        ),
        migrations.AddIndex(
            model_name='quant',
            index=models.Index(fields=['metric'], name='isfsite_qua_metric__1cd122_idx'),
        ),
        migrations.AddIndex(
            model_name='quant',
            index=models.Index(fields=['date'], name='isfsite_qua_date_8cc23e_idx'),
        ),
        migrations.AddConstraint(
            model_name='quant',
            constraint=models.UniqueConstraint(fields=('unit', 'location_based', 'metric', 'location', 'timescale', 'date', 'source', 'publication_date', 'firm'), name='unique-data-num'),
        ),
        migrations.AddConstraint(
            model_name='metric',
            constraint=models.UniqueConstraint(fields=('name',), name='unique-metric'),
        ),
    ]
